	WHAT TO FIX

1. Fix memory fragmentation in memory sections for file and directory i-nodes.
2. Fix code for maintaining disk (main binary file) stats and memory distribution regularly in actions and with every boot-up.
3. There is a bug where it does not write ROOT's parent (null) on screen. Code example:
   IDirNode node = disk.GetDirStats();
   disk.PrintIDirNodeStats(node);
   This is not related to project tast requirements.
4. Any user input can be stored in file, but when using echo command via terminal, input must not contain white spaces otherwise it will not work.
5. If user input for file data contains '/', it won't be stored.
6. If user tries to move existing file into nonexisting directory, file will be deleted.
7. When moving a file from one directory to another several times, printing its content is sometimes bugged. See picture 'mv_bug'.

	WHAT TO UPDATE

1. Update method InsertDataToFile(string input, string path) aka 'echo' to create new file if the specified one does not exist.
2. Cut the number of code lines by removing all redundant condition testings, especially in Terminal.cs file.
3. Set length check for file and directory names because they are specified in binary file to be maximum of 15 characters.
4. Add properties for max number of directories and files which ratio (8:16) is specified by i-nodes in binary file.
   User can change these values arbitrarily.
5. Add more special safe-guards in Terminal.cs file for user input.

	OPTIONAL CHANGES

1. Project task specifies minimal data block size to be 5 bytes.
   Memory fragmentation in segment for data storage is fully minimized for this case.
   For memory fragmentation to be completely avoided, one should change block size in code to be 1 byte.